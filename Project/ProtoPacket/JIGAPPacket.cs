// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: JIGAPPacket.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace JIGAPPacket {

  /// <summary>Holder for reflection information generated from JIGAPPacket.proto</summary>
  public static partial class JIGAPPacketReflection {

    #region Descriptor
    /// <summary>File descriptor for JIGAPPacket.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static JIGAPPacketReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChFKSUdBUFBhY2tldC5wcm90bxILSklHQVBQYWNrZXQiJAoIVXNlckRhdGES",
            "CgoCaWQYASABKAkSDAoEbmFtZRgCIAEoCSJKCg1TaW5nVXBSZXF1ZXN0EicK",
            "CHVzZXJEYXRhGAEgASgLMhUuSklHQVBQYWNrZXQuVXNlckRhdGESEAoIcGFz",
            "c3dhcmQYAiABKAkiVgoMU2luZ1VwQW5zd2VyEg8KB3N1Y2Nlc3MYASABKAgS",
            "NQoMc2luZ1VwUmVhc29uGAIgASgOMh8uSklHQVBQYWNrZXQuU2luZ1VwRmFp",
            "bGVkUmVhc29uIiwKDExvZ2luUmVxdWVzdBIKCgJpZBgBIAEoCRIQCghwYXNz",
            "d2FyZBgCIAEoCSJ8CgtMb2dpbkFuc3dlchInCgh1c2VyRGF0YRgBIAEoCzIV",
            "LkpJR0FQUGFja2V0LlVzZXJEYXRhEjMKC2xvZ2luUmVhc29uGAIgASgOMh4u",
            "SklHQVBQYWNrZXQuTG9naW5GYWlsZWRSZWFzb24SDwoHc3VjY2VzcxgDIAEo",
            "CCIcCghSb29tSW5mbxIQCghyb29tbmFtZRgBIAEoCSJMChBDcmVhdGVSb29t",
            "QW5zd2VyEicKCHJvb21JbmZvGAEgASgLMhUuSklHQVBQYWNrZXQuUm9vbUlu",
            "Zm8SDwoHc3VjY2VzcxgCIAEoCCI6Cg9Kb2luUm9vbVJlcXVlc3QSJwoIcm9v",
            "bUluZm8YASABKAsyFS5KSUdBUFBhY2tldC5Sb29tSW5mbyJKCg5Kb2luUm9v",
            "bUFuc3dlchInCghyb29tSW5mbxgBIAEoCzIVLkpJR0FQUGFja2V0LlJvb21J",
            "bmZvEg8KB3N1Y2Nlc3MYAiABKAgiIwoOUm9vbUxpc3RBbnN3ZXISEQoJcm9v",
            "bUNvdW50GAEgASgFIjoKD1Jvb21MaXN0RWxlbWVudBInCghyb29tSW5mbxgB",
            "IAEoCzIVLkpJR0FQUGFja2V0LlJvb21JbmZvIkoKC0NoYXRSZXF1ZXN0EicK",
            "CHVzZXJEYXRhGAEgASgLMhUuSklHQVBQYWNrZXQuVXNlckRhdGESEgoKc3Ry",
            "TWVzc2FnZRgCIAEoCSJHCghDaGF0RGF0YRInCgh1c2VyRGF0YRgBIAEoCzIV",
            "LkpJR0FQUGFja2V0LlVzZXJEYXRhEhIKCnN0ck1lc3NhZ2UYAiABKAkiLgoL",
            "RW1wdHlQYWNrZXQSHwoEdHlwZRgBIAEoDjIRLkpJR0FQUGFja2V0LlR5cGUq",
            "uQIKBFR5cGUSEgoOZVNpbmdVcFJlcXVlc3QQABIRCg1lU2luZ1VwQW5zd2Vy",
            "EAESEQoNZUxvZ2luUmVxdWVzdBACEhAKDGVMb2dpbkFuc3dlchADEhYKEmVD",
            "cmVhdGVSb29tUmVxdWVzdBAEEhUKEWVDcmVhdGVSb29tQW5zd2VyEAUSFAoQ",
            "ZUpvaW5Sb29tUmVxdWVzdBAGEhMKD2VKb2luUm9vbUFuc3dlchAHEhQKEGVS",
            "b29tTGlzdFJlcXVlc3QQCBITCg9lUm9vbUxpc3RBbnN3ZXIQCRIUChBlUm9v",
            "bUxpc3RFbGVtZW50EAoSFAoQZUV4aXRSb29tUmVxdWVzdBALEhMKD2VFeGl0",
            "Um9vbUFuc3dlchAMEhAKDGVDaGF0UmVxdWVzdBANEg0KCWVDaGF0RGF0YRAO",
            "Kk4KElNpbmdVcEZhaWxlZFJlYXNvbhIQCgxlRHVwbGljYXRlSWQQABISCg5l",
            "RHVwbGljYXRlTmFtZRABEhIKDmVEb250Q29uZGl0aW9uEAIqTAoRTG9naW5G",
            "YWlsZWRSZWFzb24SEAoMZURvbnRNYXRjaElkEAASEAoMZURvbnRNYXRjaFB3",
            "EAESEwoPZU92ZXJsYXBDb25uZWN0EAJiBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(new[] {typeof(global::JIGAPPacket.Type), typeof(global::JIGAPPacket.SingUpFailedReason), typeof(global::JIGAPPacket.LoginFailedReason), }, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::JIGAPPacket.UserData), global::JIGAPPacket.UserData.Parser, new[]{ "Id", "Name" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::JIGAPPacket.SingUpRequest), global::JIGAPPacket.SingUpRequest.Parser, new[]{ "UserData", "Passward" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::JIGAPPacket.SingUpAnswer), global::JIGAPPacket.SingUpAnswer.Parser, new[]{ "Success", "SingUpReason" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::JIGAPPacket.LoginRequest), global::JIGAPPacket.LoginRequest.Parser, new[]{ "Id", "Passward" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::JIGAPPacket.LoginAnswer), global::JIGAPPacket.LoginAnswer.Parser, new[]{ "UserData", "LoginReason", "Success" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::JIGAPPacket.RoomInfo), global::JIGAPPacket.RoomInfo.Parser, new[]{ "Roomname" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::JIGAPPacket.CreateRoomAnswer), global::JIGAPPacket.CreateRoomAnswer.Parser, new[]{ "RoomInfo", "Success" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::JIGAPPacket.JoinRoomRequest), global::JIGAPPacket.JoinRoomRequest.Parser, new[]{ "RoomInfo" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::JIGAPPacket.JoinRoomAnswer), global::JIGAPPacket.JoinRoomAnswer.Parser, new[]{ "RoomInfo", "Success" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::JIGAPPacket.RoomListAnswer), global::JIGAPPacket.RoomListAnswer.Parser, new[]{ "RoomCount" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::JIGAPPacket.RoomListElement), global::JIGAPPacket.RoomListElement.Parser, new[]{ "RoomInfo" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::JIGAPPacket.ChatRequest), global::JIGAPPacket.ChatRequest.Parser, new[]{ "UserData", "StrMessage" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::JIGAPPacket.ChatData), global::JIGAPPacket.ChatData.Parser, new[]{ "UserData", "StrMessage" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::JIGAPPacket.EmptyPacket), global::JIGAPPacket.EmptyPacket.Parser, new[]{ "Type" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Enums
  public enum Type {
    [pbr::OriginalName("eSingUpRequest")] ESingUpRequest = 0,
    [pbr::OriginalName("eSingUpAnswer")] ESingUpAnswer = 1,
    [pbr::OriginalName("eLoginRequest")] ELoginRequest = 2,
    [pbr::OriginalName("eLoginAnswer")] ELoginAnswer = 3,
    [pbr::OriginalName("eCreateRoomRequest")] ECreateRoomRequest = 4,
    [pbr::OriginalName("eCreateRoomAnswer")] ECreateRoomAnswer = 5,
    [pbr::OriginalName("eJoinRoomRequest")] EJoinRoomRequest = 6,
    [pbr::OriginalName("eJoinRoomAnswer")] EJoinRoomAnswer = 7,
    [pbr::OriginalName("eRoomListRequest")] ERoomListRequest = 8,
    [pbr::OriginalName("eRoomListAnswer")] ERoomListAnswer = 9,
    [pbr::OriginalName("eRoomListElement")] ERoomListElement = 10,
    [pbr::OriginalName("eExitRoomRequest")] EExitRoomRequest = 11,
    [pbr::OriginalName("eExitRoomAnswer")] EExitRoomAnswer = 12,
    [pbr::OriginalName("eChatRequest")] EChatRequest = 13,
    [pbr::OriginalName("eChatData")] EChatData = 14,
  }

  public enum SingUpFailedReason {
    [pbr::OriginalName("eDuplicateId")] EDuplicateId = 0,
    [pbr::OriginalName("eDuplicateName")] EDuplicateName = 1,
    [pbr::OriginalName("eDontCondition")] EDontCondition = 2,
  }

  public enum LoginFailedReason {
    [pbr::OriginalName("eDontMatchId")] EDontMatchId = 0,
    [pbr::OriginalName("eDontMatchPw")] EDontMatchPw = 1,
    [pbr::OriginalName("eOverlapConnect")] EOverlapConnect = 2,
  }

  #endregion

  #region Messages
  public sealed partial class UserData : pb::IMessage<UserData> {
    private static readonly pb::MessageParser<UserData> _parser = new pb::MessageParser<UserData>(() => new UserData());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UserData> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::JIGAPPacket.JIGAPPacketReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UserData() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UserData(UserData other) : this() {
      id_ = other.id_;
      name_ = other.name_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UserData Clone() {
      return new UserData(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private string id_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Id {
      get { return id_; }
      set {
        id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 2;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UserData);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UserData other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (Name != other.Name) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id.Length != 0) hash ^= Id.GetHashCode();
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Id.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Id);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Name);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
      }
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UserData other) {
      if (other == null) {
        return;
      }
      if (other.Id.Length != 0) {
        Id = other.Id;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Id = input.ReadString();
            break;
          }
          case 18: {
            Name = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class SingUpRequest : pb::IMessage<SingUpRequest> {
    private static readonly pb::MessageParser<SingUpRequest> _parser = new pb::MessageParser<SingUpRequest>(() => new SingUpRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SingUpRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::JIGAPPacket.JIGAPPacketReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SingUpRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SingUpRequest(SingUpRequest other) : this() {
      userData_ = other.userData_ != null ? other.userData_.Clone() : null;
      passward_ = other.passward_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SingUpRequest Clone() {
      return new SingUpRequest(this);
    }

    /// <summary>Field number for the "userData" field.</summary>
    public const int UserDataFieldNumber = 1;
    private global::JIGAPPacket.UserData userData_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::JIGAPPacket.UserData UserData {
      get { return userData_; }
      set {
        userData_ = value;
      }
    }

    /// <summary>Field number for the "passward" field.</summary>
    public const int PasswardFieldNumber = 2;
    private string passward_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Passward {
      get { return passward_; }
      set {
        passward_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SingUpRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SingUpRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(UserData, other.UserData)) return false;
      if (Passward != other.Passward) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (userData_ != null) hash ^= UserData.GetHashCode();
      if (Passward.Length != 0) hash ^= Passward.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (userData_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(UserData);
      }
      if (Passward.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Passward);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (userData_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(UserData);
      }
      if (Passward.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Passward);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SingUpRequest other) {
      if (other == null) {
        return;
      }
      if (other.userData_ != null) {
        if (userData_ == null) {
          UserData = new global::JIGAPPacket.UserData();
        }
        UserData.MergeFrom(other.UserData);
      }
      if (other.Passward.Length != 0) {
        Passward = other.Passward;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (userData_ == null) {
              UserData = new global::JIGAPPacket.UserData();
            }
            input.ReadMessage(UserData);
            break;
          }
          case 18: {
            Passward = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class SingUpAnswer : pb::IMessage<SingUpAnswer> {
    private static readonly pb::MessageParser<SingUpAnswer> _parser = new pb::MessageParser<SingUpAnswer>(() => new SingUpAnswer());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SingUpAnswer> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::JIGAPPacket.JIGAPPacketReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SingUpAnswer() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SingUpAnswer(SingUpAnswer other) : this() {
      success_ = other.success_;
      singUpReason_ = other.singUpReason_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SingUpAnswer Clone() {
      return new SingUpAnswer(this);
    }

    /// <summary>Field number for the "success" field.</summary>
    public const int SuccessFieldNumber = 1;
    private bool success_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Success {
      get { return success_; }
      set {
        success_ = value;
      }
    }

    /// <summary>Field number for the "singUpReason" field.</summary>
    public const int SingUpReasonFieldNumber = 2;
    private global::JIGAPPacket.SingUpFailedReason singUpReason_ = global::JIGAPPacket.SingUpFailedReason.EDuplicateId;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::JIGAPPacket.SingUpFailedReason SingUpReason {
      get { return singUpReason_; }
      set {
        singUpReason_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SingUpAnswer);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SingUpAnswer other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Success != other.Success) return false;
      if (SingUpReason != other.SingUpReason) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Success != false) hash ^= Success.GetHashCode();
      if (SingUpReason != global::JIGAPPacket.SingUpFailedReason.EDuplicateId) hash ^= SingUpReason.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Success != false) {
        output.WriteRawTag(8);
        output.WriteBool(Success);
      }
      if (SingUpReason != global::JIGAPPacket.SingUpFailedReason.EDuplicateId) {
        output.WriteRawTag(16);
        output.WriteEnum((int) SingUpReason);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Success != false) {
        size += 1 + 1;
      }
      if (SingUpReason != global::JIGAPPacket.SingUpFailedReason.EDuplicateId) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) SingUpReason);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SingUpAnswer other) {
      if (other == null) {
        return;
      }
      if (other.Success != false) {
        Success = other.Success;
      }
      if (other.SingUpReason != global::JIGAPPacket.SingUpFailedReason.EDuplicateId) {
        SingUpReason = other.SingUpReason;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Success = input.ReadBool();
            break;
          }
          case 16: {
            SingUpReason = (global::JIGAPPacket.SingUpFailedReason) input.ReadEnum();
            break;
          }
        }
      }
    }

  }

  public sealed partial class LoginRequest : pb::IMessage<LoginRequest> {
    private static readonly pb::MessageParser<LoginRequest> _parser = new pb::MessageParser<LoginRequest>(() => new LoginRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<LoginRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::JIGAPPacket.JIGAPPacketReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LoginRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LoginRequest(LoginRequest other) : this() {
      id_ = other.id_;
      passward_ = other.passward_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LoginRequest Clone() {
      return new LoginRequest(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private string id_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Id {
      get { return id_; }
      set {
        id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "passward" field.</summary>
    public const int PasswardFieldNumber = 2;
    private string passward_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Passward {
      get { return passward_; }
      set {
        passward_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as LoginRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(LoginRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (Passward != other.Passward) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id.Length != 0) hash ^= Id.GetHashCode();
      if (Passward.Length != 0) hash ^= Passward.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Id.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Id);
      }
      if (Passward.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Passward);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
      }
      if (Passward.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Passward);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(LoginRequest other) {
      if (other == null) {
        return;
      }
      if (other.Id.Length != 0) {
        Id = other.Id;
      }
      if (other.Passward.Length != 0) {
        Passward = other.Passward;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Id = input.ReadString();
            break;
          }
          case 18: {
            Passward = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class LoginAnswer : pb::IMessage<LoginAnswer> {
    private static readonly pb::MessageParser<LoginAnswer> _parser = new pb::MessageParser<LoginAnswer>(() => new LoginAnswer());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<LoginAnswer> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::JIGAPPacket.JIGAPPacketReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LoginAnswer() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LoginAnswer(LoginAnswer other) : this() {
      userData_ = other.userData_ != null ? other.userData_.Clone() : null;
      loginReason_ = other.loginReason_;
      success_ = other.success_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LoginAnswer Clone() {
      return new LoginAnswer(this);
    }

    /// <summary>Field number for the "userData" field.</summary>
    public const int UserDataFieldNumber = 1;
    private global::JIGAPPacket.UserData userData_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::JIGAPPacket.UserData UserData {
      get { return userData_; }
      set {
        userData_ = value;
      }
    }

    /// <summary>Field number for the "loginReason" field.</summary>
    public const int LoginReasonFieldNumber = 2;
    private global::JIGAPPacket.LoginFailedReason loginReason_ = global::JIGAPPacket.LoginFailedReason.EDontMatchId;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::JIGAPPacket.LoginFailedReason LoginReason {
      get { return loginReason_; }
      set {
        loginReason_ = value;
      }
    }

    /// <summary>Field number for the "success" field.</summary>
    public const int SuccessFieldNumber = 3;
    private bool success_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Success {
      get { return success_; }
      set {
        success_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as LoginAnswer);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(LoginAnswer other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(UserData, other.UserData)) return false;
      if (LoginReason != other.LoginReason) return false;
      if (Success != other.Success) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (userData_ != null) hash ^= UserData.GetHashCode();
      if (LoginReason != global::JIGAPPacket.LoginFailedReason.EDontMatchId) hash ^= LoginReason.GetHashCode();
      if (Success != false) hash ^= Success.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (userData_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(UserData);
      }
      if (LoginReason != global::JIGAPPacket.LoginFailedReason.EDontMatchId) {
        output.WriteRawTag(16);
        output.WriteEnum((int) LoginReason);
      }
      if (Success != false) {
        output.WriteRawTag(24);
        output.WriteBool(Success);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (userData_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(UserData);
      }
      if (LoginReason != global::JIGAPPacket.LoginFailedReason.EDontMatchId) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) LoginReason);
      }
      if (Success != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(LoginAnswer other) {
      if (other == null) {
        return;
      }
      if (other.userData_ != null) {
        if (userData_ == null) {
          UserData = new global::JIGAPPacket.UserData();
        }
        UserData.MergeFrom(other.UserData);
      }
      if (other.LoginReason != global::JIGAPPacket.LoginFailedReason.EDontMatchId) {
        LoginReason = other.LoginReason;
      }
      if (other.Success != false) {
        Success = other.Success;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (userData_ == null) {
              UserData = new global::JIGAPPacket.UserData();
            }
            input.ReadMessage(UserData);
            break;
          }
          case 16: {
            LoginReason = (global::JIGAPPacket.LoginFailedReason) input.ReadEnum();
            break;
          }
          case 24: {
            Success = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  public sealed partial class RoomInfo : pb::IMessage<RoomInfo> {
    private static readonly pb::MessageParser<RoomInfo> _parser = new pb::MessageParser<RoomInfo>(() => new RoomInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RoomInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::JIGAPPacket.JIGAPPacketReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RoomInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RoomInfo(RoomInfo other) : this() {
      roomname_ = other.roomname_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RoomInfo Clone() {
      return new RoomInfo(this);
    }

    /// <summary>Field number for the "roomname" field.</summary>
    public const int RoomnameFieldNumber = 1;
    private string roomname_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Roomname {
      get { return roomname_; }
      set {
        roomname_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RoomInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RoomInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Roomname != other.Roomname) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Roomname.Length != 0) hash ^= Roomname.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Roomname.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Roomname);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Roomname.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Roomname);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RoomInfo other) {
      if (other == null) {
        return;
      }
      if (other.Roomname.Length != 0) {
        Roomname = other.Roomname;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Roomname = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class CreateRoomAnswer : pb::IMessage<CreateRoomAnswer> {
    private static readonly pb::MessageParser<CreateRoomAnswer> _parser = new pb::MessageParser<CreateRoomAnswer>(() => new CreateRoomAnswer());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CreateRoomAnswer> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::JIGAPPacket.JIGAPPacketReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateRoomAnswer() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateRoomAnswer(CreateRoomAnswer other) : this() {
      roomInfo_ = other.roomInfo_ != null ? other.roomInfo_.Clone() : null;
      success_ = other.success_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateRoomAnswer Clone() {
      return new CreateRoomAnswer(this);
    }

    /// <summary>Field number for the "roomInfo" field.</summary>
    public const int RoomInfoFieldNumber = 1;
    private global::JIGAPPacket.RoomInfo roomInfo_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::JIGAPPacket.RoomInfo RoomInfo {
      get { return roomInfo_; }
      set {
        roomInfo_ = value;
      }
    }

    /// <summary>Field number for the "success" field.</summary>
    public const int SuccessFieldNumber = 2;
    private bool success_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Success {
      get { return success_; }
      set {
        success_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CreateRoomAnswer);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CreateRoomAnswer other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(RoomInfo, other.RoomInfo)) return false;
      if (Success != other.Success) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (roomInfo_ != null) hash ^= RoomInfo.GetHashCode();
      if (Success != false) hash ^= Success.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (roomInfo_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(RoomInfo);
      }
      if (Success != false) {
        output.WriteRawTag(16);
        output.WriteBool(Success);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (roomInfo_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(RoomInfo);
      }
      if (Success != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CreateRoomAnswer other) {
      if (other == null) {
        return;
      }
      if (other.roomInfo_ != null) {
        if (roomInfo_ == null) {
          RoomInfo = new global::JIGAPPacket.RoomInfo();
        }
        RoomInfo.MergeFrom(other.RoomInfo);
      }
      if (other.Success != false) {
        Success = other.Success;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (roomInfo_ == null) {
              RoomInfo = new global::JIGAPPacket.RoomInfo();
            }
            input.ReadMessage(RoomInfo);
            break;
          }
          case 16: {
            Success = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  public sealed partial class JoinRoomRequest : pb::IMessage<JoinRoomRequest> {
    private static readonly pb::MessageParser<JoinRoomRequest> _parser = new pb::MessageParser<JoinRoomRequest>(() => new JoinRoomRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<JoinRoomRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::JIGAPPacket.JIGAPPacketReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public JoinRoomRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public JoinRoomRequest(JoinRoomRequest other) : this() {
      roomInfo_ = other.roomInfo_ != null ? other.roomInfo_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public JoinRoomRequest Clone() {
      return new JoinRoomRequest(this);
    }

    /// <summary>Field number for the "roomInfo" field.</summary>
    public const int RoomInfoFieldNumber = 1;
    private global::JIGAPPacket.RoomInfo roomInfo_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::JIGAPPacket.RoomInfo RoomInfo {
      get { return roomInfo_; }
      set {
        roomInfo_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as JoinRoomRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(JoinRoomRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(RoomInfo, other.RoomInfo)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (roomInfo_ != null) hash ^= RoomInfo.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (roomInfo_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(RoomInfo);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (roomInfo_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(RoomInfo);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(JoinRoomRequest other) {
      if (other == null) {
        return;
      }
      if (other.roomInfo_ != null) {
        if (roomInfo_ == null) {
          RoomInfo = new global::JIGAPPacket.RoomInfo();
        }
        RoomInfo.MergeFrom(other.RoomInfo);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (roomInfo_ == null) {
              RoomInfo = new global::JIGAPPacket.RoomInfo();
            }
            input.ReadMessage(RoomInfo);
            break;
          }
        }
      }
    }

  }

  public sealed partial class JoinRoomAnswer : pb::IMessage<JoinRoomAnswer> {
    private static readonly pb::MessageParser<JoinRoomAnswer> _parser = new pb::MessageParser<JoinRoomAnswer>(() => new JoinRoomAnswer());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<JoinRoomAnswer> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::JIGAPPacket.JIGAPPacketReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public JoinRoomAnswer() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public JoinRoomAnswer(JoinRoomAnswer other) : this() {
      roomInfo_ = other.roomInfo_ != null ? other.roomInfo_.Clone() : null;
      success_ = other.success_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public JoinRoomAnswer Clone() {
      return new JoinRoomAnswer(this);
    }

    /// <summary>Field number for the "roomInfo" field.</summary>
    public const int RoomInfoFieldNumber = 1;
    private global::JIGAPPacket.RoomInfo roomInfo_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::JIGAPPacket.RoomInfo RoomInfo {
      get { return roomInfo_; }
      set {
        roomInfo_ = value;
      }
    }

    /// <summary>Field number for the "success" field.</summary>
    public const int SuccessFieldNumber = 2;
    private bool success_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Success {
      get { return success_; }
      set {
        success_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as JoinRoomAnswer);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(JoinRoomAnswer other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(RoomInfo, other.RoomInfo)) return false;
      if (Success != other.Success) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (roomInfo_ != null) hash ^= RoomInfo.GetHashCode();
      if (Success != false) hash ^= Success.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (roomInfo_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(RoomInfo);
      }
      if (Success != false) {
        output.WriteRawTag(16);
        output.WriteBool(Success);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (roomInfo_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(RoomInfo);
      }
      if (Success != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(JoinRoomAnswer other) {
      if (other == null) {
        return;
      }
      if (other.roomInfo_ != null) {
        if (roomInfo_ == null) {
          RoomInfo = new global::JIGAPPacket.RoomInfo();
        }
        RoomInfo.MergeFrom(other.RoomInfo);
      }
      if (other.Success != false) {
        Success = other.Success;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (roomInfo_ == null) {
              RoomInfo = new global::JIGAPPacket.RoomInfo();
            }
            input.ReadMessage(RoomInfo);
            break;
          }
          case 16: {
            Success = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  public sealed partial class RoomListAnswer : pb::IMessage<RoomListAnswer> {
    private static readonly pb::MessageParser<RoomListAnswer> _parser = new pb::MessageParser<RoomListAnswer>(() => new RoomListAnswer());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RoomListAnswer> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::JIGAPPacket.JIGAPPacketReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RoomListAnswer() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RoomListAnswer(RoomListAnswer other) : this() {
      roomCount_ = other.roomCount_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RoomListAnswer Clone() {
      return new RoomListAnswer(this);
    }

    /// <summary>Field number for the "roomCount" field.</summary>
    public const int RoomCountFieldNumber = 1;
    private int roomCount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int RoomCount {
      get { return roomCount_; }
      set {
        roomCount_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RoomListAnswer);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RoomListAnswer other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (RoomCount != other.RoomCount) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (RoomCount != 0) hash ^= RoomCount.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (RoomCount != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(RoomCount);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (RoomCount != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(RoomCount);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RoomListAnswer other) {
      if (other == null) {
        return;
      }
      if (other.RoomCount != 0) {
        RoomCount = other.RoomCount;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            RoomCount = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class RoomListElement : pb::IMessage<RoomListElement> {
    private static readonly pb::MessageParser<RoomListElement> _parser = new pb::MessageParser<RoomListElement>(() => new RoomListElement());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RoomListElement> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::JIGAPPacket.JIGAPPacketReflection.Descriptor.MessageTypes[10]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RoomListElement() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RoomListElement(RoomListElement other) : this() {
      roomInfo_ = other.roomInfo_ != null ? other.roomInfo_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RoomListElement Clone() {
      return new RoomListElement(this);
    }

    /// <summary>Field number for the "roomInfo" field.</summary>
    public const int RoomInfoFieldNumber = 1;
    private global::JIGAPPacket.RoomInfo roomInfo_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::JIGAPPacket.RoomInfo RoomInfo {
      get { return roomInfo_; }
      set {
        roomInfo_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RoomListElement);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RoomListElement other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(RoomInfo, other.RoomInfo)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (roomInfo_ != null) hash ^= RoomInfo.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (roomInfo_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(RoomInfo);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (roomInfo_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(RoomInfo);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RoomListElement other) {
      if (other == null) {
        return;
      }
      if (other.roomInfo_ != null) {
        if (roomInfo_ == null) {
          RoomInfo = new global::JIGAPPacket.RoomInfo();
        }
        RoomInfo.MergeFrom(other.RoomInfo);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (roomInfo_ == null) {
              RoomInfo = new global::JIGAPPacket.RoomInfo();
            }
            input.ReadMessage(RoomInfo);
            break;
          }
        }
      }
    }

  }

  public sealed partial class ChatRequest : pb::IMessage<ChatRequest> {
    private static readonly pb::MessageParser<ChatRequest> _parser = new pb::MessageParser<ChatRequest>(() => new ChatRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ChatRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::JIGAPPacket.JIGAPPacketReflection.Descriptor.MessageTypes[11]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ChatRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ChatRequest(ChatRequest other) : this() {
      userData_ = other.userData_ != null ? other.userData_.Clone() : null;
      strMessage_ = other.strMessage_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ChatRequest Clone() {
      return new ChatRequest(this);
    }

    /// <summary>Field number for the "userData" field.</summary>
    public const int UserDataFieldNumber = 1;
    private global::JIGAPPacket.UserData userData_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::JIGAPPacket.UserData UserData {
      get { return userData_; }
      set {
        userData_ = value;
      }
    }

    /// <summary>Field number for the "strMessage" field.</summary>
    public const int StrMessageFieldNumber = 2;
    private string strMessage_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string StrMessage {
      get { return strMessage_; }
      set {
        strMessage_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ChatRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ChatRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(UserData, other.UserData)) return false;
      if (StrMessage != other.StrMessage) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (userData_ != null) hash ^= UserData.GetHashCode();
      if (StrMessage.Length != 0) hash ^= StrMessage.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (userData_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(UserData);
      }
      if (StrMessage.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(StrMessage);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (userData_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(UserData);
      }
      if (StrMessage.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(StrMessage);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ChatRequest other) {
      if (other == null) {
        return;
      }
      if (other.userData_ != null) {
        if (userData_ == null) {
          UserData = new global::JIGAPPacket.UserData();
        }
        UserData.MergeFrom(other.UserData);
      }
      if (other.StrMessage.Length != 0) {
        StrMessage = other.StrMessage;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (userData_ == null) {
              UserData = new global::JIGAPPacket.UserData();
            }
            input.ReadMessage(UserData);
            break;
          }
          case 18: {
            StrMessage = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class ChatData : pb::IMessage<ChatData> {
    private static readonly pb::MessageParser<ChatData> _parser = new pb::MessageParser<ChatData>(() => new ChatData());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ChatData> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::JIGAPPacket.JIGAPPacketReflection.Descriptor.MessageTypes[12]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ChatData() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ChatData(ChatData other) : this() {
      userData_ = other.userData_ != null ? other.userData_.Clone() : null;
      strMessage_ = other.strMessage_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ChatData Clone() {
      return new ChatData(this);
    }

    /// <summary>Field number for the "userData" field.</summary>
    public const int UserDataFieldNumber = 1;
    private global::JIGAPPacket.UserData userData_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::JIGAPPacket.UserData UserData {
      get { return userData_; }
      set {
        userData_ = value;
      }
    }

    /// <summary>Field number for the "strMessage" field.</summary>
    public const int StrMessageFieldNumber = 2;
    private string strMessage_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string StrMessage {
      get { return strMessage_; }
      set {
        strMessage_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ChatData);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ChatData other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(UserData, other.UserData)) return false;
      if (StrMessage != other.StrMessage) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (userData_ != null) hash ^= UserData.GetHashCode();
      if (StrMessage.Length != 0) hash ^= StrMessage.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (userData_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(UserData);
      }
      if (StrMessage.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(StrMessage);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (userData_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(UserData);
      }
      if (StrMessage.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(StrMessage);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ChatData other) {
      if (other == null) {
        return;
      }
      if (other.userData_ != null) {
        if (userData_ == null) {
          UserData = new global::JIGAPPacket.UserData();
        }
        UserData.MergeFrom(other.UserData);
      }
      if (other.StrMessage.Length != 0) {
        StrMessage = other.StrMessage;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (userData_ == null) {
              UserData = new global::JIGAPPacket.UserData();
            }
            input.ReadMessage(UserData);
            break;
          }
          case 18: {
            StrMessage = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class EmptyPacket : pb::IMessage<EmptyPacket> {
    private static readonly pb::MessageParser<EmptyPacket> _parser = new pb::MessageParser<EmptyPacket>(() => new EmptyPacket());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<EmptyPacket> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::JIGAPPacket.JIGAPPacketReflection.Descriptor.MessageTypes[13]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EmptyPacket() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EmptyPacket(EmptyPacket other) : this() {
      type_ = other.type_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EmptyPacket Clone() {
      return new EmptyPacket(this);
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 1;
    private global::JIGAPPacket.Type type_ = global::JIGAPPacket.Type.ESingUpRequest;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::JIGAPPacket.Type Type {
      get { return type_; }
      set {
        type_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as EmptyPacket);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(EmptyPacket other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Type != other.Type) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Type != global::JIGAPPacket.Type.ESingUpRequest) hash ^= Type.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Type != global::JIGAPPacket.Type.ESingUpRequest) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Type);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Type != global::JIGAPPacket.Type.ESingUpRequest) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Type);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(EmptyPacket other) {
      if (other == null) {
        return;
      }
      if (other.Type != global::JIGAPPacket.Type.ESingUpRequest) {
        Type = other.Type;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Type = (global::JIGAPPacket.Type) input.ReadEnum();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
